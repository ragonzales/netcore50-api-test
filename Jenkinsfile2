import groovy.json.JsonSlurper

node {
    ws('netcore') {
        stage('SCM') {
            git branch: 'main', url: 'https://github.com/Stywar/netcore50-api-test'           
        }
        stage('Build') {
            dotnet_build();
            
        }
        stage('Docker Build') {
              bat(script: 'docker login -u rtorresgonzales -p Ratg$151992', returnStdout: true);
              bat(script: 'docker build -t rtorresgonzales/servicenet5 .', returnStdout: true);
              bat(script: 'docker push rtorresgonzales/servicenet5', returnStdout: true);
        }
        stage('Deploy Dev') {             
              bat(script: 'az login --service-principal --username b1277da0-9b01-4377-8ac0-cbe32560a0a9 --password yrNooQdJyIJEGfq5SRdR-H-W_s.T7p0.cb --tenant 230b6181-552d-49d1-a6a2-17dda4c4058e', returnStdout: true);
              //script: 'az account set --subscription "StywarV"', returnStdout: true);
              bat(script: 'az container restart --name microtestservice --resource-group JenkinsDEVOPS', returnStdout: true);
        }
        stage('Deploy Prod') {
             echo 'Hello World'
             /*
             bat(script: 'az aks get-credentials --resource-group  aforo255Devops  --name cluster-Devops & kubectl config get-contexts --kubeconfig=%KUBE_PATH_CONFIG%', returnStdout: true);
             bat(script: 'kubectl config use-context cluster-Devops --kubeconfig=%KUBE_PATH_CONFIG%', returnStdout: true);
             bat(script: 'Kubectl delete --all pods --kubeconfig=%KUBE_PATH_CONFIG% & kubectl apply -f k8s.yml --kubeconfig=%KUBE_PATH_CONFIG%', returnStdout: true);
             */
        }        
    }
}

def dotnet_build() {
    bat(script: 'dir', returnStdout: true);
    bat(script: 'dotnet restore', returnStdout: true);
    bat(script: 'dotnet build', returnStdout: true);
    bat(script: 'dotnet test', returnStdout: true);    
}
